<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Width="15"
                Height="13"
                Background="Transparent">
            <Path x:Name="ExpandPath"
                  Margin="1,1,1,1"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Data="M 4 0 L 8 4 L 4 8 Z"
                  Fill="{DynamicResource TreeViewItemExpanderToggleButtonGlyphFillBrush}"
                  Stroke="{DynamicResource TreeViewItemExpanderToggleButtonGlyphStrokeBrush}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="Data" Value="M 0 4 L 8 4 L 4 8 Z" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource TreeViewItemExpanderToggleButtonGlyphMouseOverFillBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0,0,0,0"
                       Opacity="0"
                       Stroke="Black"
                       StrokeDashArray="1 2"
                       StrokeThickness="5" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type TreeViewItem}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource ReversedForegroundBrush}" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding" Value="1,0,0,0" />
    <Setter Property="FrameworkElement.MinHeight" Value="25" />
    <Setter Property="FrameworkElement.Margin" Value="0" />
    <Setter Property="Control.FontSize" Value="12" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" MinWidth="19" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander"
                          ClickMode="Press"
                          IsChecked="{Binding Path=IsExpanded,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ExpandCollapseToggleStyle}" />
            <Border Name="Bd"
                    Grid.Column="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="2"
                    Padding="{TemplateBinding Padding}">
              <ContentPresenter x:Name="PART_Header"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentSource="Header" />
            </Border>
            <ItemsPresenter x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource TreeViewItemMouseOverBackgroundBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false" />
                <Condition Property="Width" Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false" />
                <Condition Property="Height" Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource TreeViewItemSelectedBackgroundBrush}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource TreeViewItemSelectedBorderBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource ReversedSelectedForegroundBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true" />
                <Condition Property="IsSelectionActive" Value="false" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource TreeViewItemSelectedBackgroundBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource ReversedSelectedForegroundBrush}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource ReversedDisabledForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>