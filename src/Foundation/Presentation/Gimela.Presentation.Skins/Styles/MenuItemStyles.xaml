<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
    <Setter Property="Height" Value="1" />
    <Setter Property="Margin" Value="0,4,0,4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Separator">
          <Border BorderBrush="{DynamicResource MenuItemSubBorderBorderBrushBrush}" BorderThickness="2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  TopLevelHeader  -->
  <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
    <Border Name="Border"
            MinWidth="150"
            MinHeight="23">
      <Grid>
        <ContentPresenter Margin="6,3,6,3"
                          ContentSource="Header"
                          RecognizesAccessKey="True" />
        <Popup Name="Popup"
               AllowsTransparency="True"
               Focusable="False"
               IsOpen="{TemplateBinding IsSubmenuOpen}"
               Placement="Bottom"
               PopupAnimation="Fade">
          <Border Name="SubmenuBorder"
                  Background="{DynamicResource MenuItemSubBorderBackgroundBrush}"
                  BorderBrush="{DynamicResource MenuItemSubBorderBorderBrushBrush}"
                  BorderThickness="2"
                  SnapsToDevicePixels="True">
            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="true">
        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemBorderBackgroundBrush}" />
        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ReversedSelectedForegroundBrush}" />
      </Trigger>
      <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  TopLevelItem  -->
  <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
    <Border Name="Border"
            MinWidth="150"
            MinHeight="23">
      <Grid>
        <ContentPresenter Margin="6,3,6,3"
                          ContentSource="Header"
                          RecognizesAccessKey="True" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemBorderBackgroundBrush}" />
        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ReversedForegroundBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  SubmenuHeader  -->
  <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
    <Border Name="Border"
            MinWidth="150"
            MinHeight="23"
            CornerRadius="2">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"
                            MinWidth="12"
                            SharedSizeGroup="Icon" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
          <ColumnDefinition Width="13" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon"
                          Margin="6,0,6,0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          ContentSource="Icon" />
        <ContentPresenter Name="HeaderHost"
                          Grid.Column="1"
                          VerticalAlignment="Center"
                          ContentSource="Header"
                          RecognizesAccessKey="True" />
        <TextBlock x:Name="InputGestureText"
                   Grid.Column="2"
                   Margin="5,2,2,2"
                   DockPanel.Dock="Right"
                   Foreground="{DynamicResource ReversedSelectedForegroundBrush}"
                   Text="{TemplateBinding InputGestureText}" />
        <Path Grid.Column="3"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Data="M 0 0 L 0 7 L 4 3.5 Z"
              Fill="{DynamicResource MenuItemGlyphBrush}" />
        <Popup Name="Popup"
               AllowsTransparency="True"
               Focusable="False"
               HorizontalOffset="-4"
               IsOpen="{TemplateBinding IsSubmenuOpen}"
               Placement="Right"
               PopupAnimation="Fade">
          <Border Name="SubmenuBorder"
                  Background="{DynamicResource MenuItemSubBorderBackgroundBrush}"
                  BorderBrush="{DynamicResource MenuItemSubBorderBorderBrushBrush}"
                  BorderThickness="2"
                  SnapsToDevicePixels="True">
            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemSelectedBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ReversedForegroundBrush}" />
      </Trigger>
      <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  SubmenuItem  -->
  <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
    <Border Name="Border"
            MinWidth="150"
            MinHeight="23"
            CornerRadius="2">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
          <ColumnDefinition Width="13" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon"
                          Margin="6,0,6,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          ContentSource="Icon" />
        <Border Name="Check"
                Width="13"
                Height="13"
                Margin="6,0,6,0"
                Background="{DynamicResource MenuItemSubBorderBackgroundBrush}"
                BorderBrush="{DynamicResource MenuItemSubBorderBorderBrushBrush}"
                BorderThickness="2"
                CornerRadius="2"
                Visibility="Collapsed">
          <Path Name="CheckMark"
                Width="7"
                Height="7"
                Data="M 0 0 L 7 7 M 0 7 L 7 0"
                SnapsToDevicePixels="False"
                Stroke="{DynamicResource MenuItemGlyphBrush}"
                StrokeThickness="2"
                Visibility="Hidden" />
        </Border>
        <ContentPresenter Name="HeaderHost"
                          Grid.Column="1"
                          VerticalAlignment="Center"
                          ContentSource="Header"
                          RecognizesAccessKey="True" />
        <TextBlock x:Name="InputGestureText"
                   Grid.Column="2"
                   Margin="5,2,0,2"
                   DockPanel.Dock="Right"
                   Foreground="{DynamicResource ReversedSelectedForegroundBrush}"
                   Text="{TemplateBinding InputGestureText}" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsCheckable" Value="true">
        <Setter TargetName="Check" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuItemSelectedBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ReversedForegroundBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  MenuItem Style  -->
  <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="MinHeight" Value="23" />
    <Setter Property="MinWidth" Value="150" />
    <Style.Triggers>
      <Trigger Property="Role" Value="TopLevelHeader">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
      </Trigger>
      <Trigger Property="Role" Value="TopLevelItem">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
      </Trigger>
      <Trigger Property="Role" Value="SubmenuHeader">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="Role" Value="SubmenuItem">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>